#+TITLE: dotJS 2025 Conference Notes
#+AUTHOR: Aidan Pace
#+DATE: April 3, 2025
#+PROPERTY: header-args :mkdirp yes
#+OPTIONS: toc:2 num:t
#+CITE_EXPORT: csl

* dotJS 2025 Conference Notes

This repository contains personal notes, resources, and code examples from the dotJS 2025 conference held on April 3, 2025, at Folies Berg√®re, 32 rue Richer, 75009 Paris.

** Repository Structure

- =talks/= - Notes from conference talks (morning and afternoon sessions)
- =notes/= - Additional personal notes and lightning talk notes
- =code-examples/= - Code snippets and demos from the talks
- =resources/= - Slides, references, and bibliography
- =diagrams/= - Visual representations of concepts
- =lisp/= - Emacs Lisp utilities for working with the repository
- =scripts/= - Helper scripts for tasks that are too complex for the Makefile
- =Makefile= - Simple commands for common tasks (tangle, detangle, export)

** Environment Setup

This repository is designed to work with the following tools:

*** Development Tools
- Node.js v18+ and npm 9+ (for JavaScript examples)
- Python 3.11+ (for utilities and analysis)
- Emacs 31.0.50+ (for Org-mode and literate programming)
- Guile 3.0.8+ (for Scheme examples)
- Shellcheck and shfmt (for shell script linting)
- Mermaid CLI (for diagram generation)
- ImageMagick (for image processing)

*** Installing Required Tools

#+BEGIN_SRC shell
# Node.js tools
npm install -g @mermaid-js/mermaid-cli eslint

# Shell tools 
sudo apt-get install -y shellcheck shfmt

# Python tools - choose one approach:
# Option 1: Using pip
pip install ruff black pytest jupyter

# Option 2: Using Poetry (preferred for dependency isolation)
# We're using Poetry 2.1.1
# The project already has pyproject.toml and poetry.lock files
poetry install  # This will install all dependencies from the lockfile

# Ensure Emacs is configured with org-mode
# See lisp/dotjs-init.el for Emacs configuration
#+END_SRC

** Quick Start

1. Clone this repository:
   #+BEGIN_SRC shell
   git clone https://github.com/aygp-dr/dotjs-2025.git
   cd dotjs-2025
   #+END_SRC

2. Open any file in Emacs and the project settings will be automatically loaded via `.dir-locals.el`.

3. Explore the talk notes in the =talks/= directory

4. Manage content using either the Makefile or Emacs commands:

   *** Using Makefile (from command line)
   
   #+BEGIN_SRC shell
   # List all available commands
   make
   
   # Tangle code from all Org files
   make tangle
   
   # Detangle (sync code back to Org files)
   make detangle
   
   # Generate HTML documentation
   make html
   
   # Generate PDF documentation
   make pdf
   
   # Clean generated files
   make clean
   #+END_SRC
   
   *** Using Emacs Org-mode (within editor)
   
   #+BEGIN_SRC text
   # In Emacs, with an .org file open:
   
   # Execute a code block
   C-c C-c (with cursor in code block)
   
   # Tangle code blocks to source files
   C-c C-v t
   
   # Export to HTML
   C-c C-e h h
   
   # Export to PDF
   C-c C-e l p
   #+END_SRC

** Key Features

- *Org-mode Integration*: All notes use Org-mode with Babel for code execution
- *Tangle/Detangle*: Code blocks can be extracted to standalone files and synchronized back
- *Bibliography Support*: Citations are managed via =resources/bibliography/references.bib=
- *Emacs Lisp Utilities*: Custom functions for working with the repository
- *Technology Focus*: Support for JavaScript/Node.js, Python, and Scheme code samples
- *Diagram Generation*: Integrated Mermaid diagrams for visualizing concepts

** Conference Topics

The conference covers several major themes:

- AI Integration with JavaScript (models, agents, code generation)
- Modern Architecture (framework evolution, routing, Web 2.5)
- JavaScript Runtime Advancements
- Local-First and Offline Capabilities
- Creative Web Applications

** Important Talks

- Ryan Dahl's special announcement (creator of Node.js and Deno)
- Kyle Simpson on Local-First Web Applications [cite:@simpson2015you] [cite:@localfirst2025]
- Wes Bos on AI models in JavaScript
- Angie Jones on AI Agents and the Programmable Web

** Citing Conference Material

When referencing material from the conference in your own work, please use the bibliography provided in =resources/bibliography/references.bib=.

Example citation: [cite:@resig2025jsperformance]

** License

Personal notes and code examples are shared for educational purposes. All material from speakers remains under their original copyright.